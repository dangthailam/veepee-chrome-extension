// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrivateSale.DataContext;

namespace private_sale.Migrations
{
    [DbContext(typeof(PrivateSaleContext))]
    partial class PrivateSaleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrivateSale.Models.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("PrivateSale.Models.ProductInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductInformation");
                });

            modelBuilder.Entity("PrivateSale.Models.ProductLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SaleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductInformationId");

                    b.HasIndex("SaleId");

                    b.ToTable("ProductLine");
                });

            modelBuilder.Entity("PrivateSale.Models.ProductSelection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnStock")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductLineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductLineId");

                    b.ToTable("ProductSelection");
                });

            modelBuilder.Entity("PrivateSale.Models.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("PrivateSale.Models.ProductLine", b =>
                {
                    b.HasOne("PrivateSale.Models.ProductInformation", "ProductInformation")
                        .WithMany()
                        .HasForeignKey("ProductInformationId");

                    b.HasOne("PrivateSale.Models.Sale", null)
                        .WithMany("ProductLines")
                        .HasForeignKey("SaleId");

                    b.Navigation("ProductInformation");
                });

            modelBuilder.Entity("PrivateSale.Models.ProductSelection", b =>
                {
                    b.HasOne("PrivateSale.Models.ProductLine", null)
                        .WithMany("Selections")
                        .HasForeignKey("ProductLineId");
                });

            modelBuilder.Entity("PrivateSale.Models.Sale", b =>
                {
                    b.HasOne("PrivateSale.Models.Brand", "Brand")
                        .WithMany("Sales")
                        .HasForeignKey("BrandId");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("PrivateSale.Models.Brand", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("PrivateSale.Models.ProductLine", b =>
                {
                    b.Navigation("Selections");
                });

            modelBuilder.Entity("PrivateSale.Models.Sale", b =>
                {
                    b.Navigation("ProductLines");
                });
#pragma warning restore 612, 618
        }
    }
}
